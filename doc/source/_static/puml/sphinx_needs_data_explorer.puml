@startmindmap sphinx_needs_data_explorer

'rankdir=LR nodesep=20

'skinparam nodesep 50%
'skinparam ranksep 50%
skinparam defaultFontSize 40%
skinparam DefaultTextAlignment center

/'
<style>
  mindmapDiagram {
  Scale 10
  LineColor Black
   node {
    FontName Roboto
    Padding 5
    Margin 15
   ' RoundCorner 11
    LineColor black
    BackgroundColor #cc33cc-#0c33ac
    FontColor white
    LineStyle 0
    LineThickness 1
    DiagonalCorner 50
    MinimumWidth 200
    MaximumWidth 200
  }
</style>
'/

<style>
  mindmapDiagram {
   node {
    Padding 30
    Margin 65
    'MinimumWidth 100
    MaximumWidth 00
  }
</style>

'top to bottom direction
'right to left direction
left to right direction
'scale 0.65
!$rootColor="#Orange"
!$Implemented="#Tomato"

!procedure $mcolor($arg1,$arg2)
<color:blue>[[ $arg1 $arg2 ]]</color>
!endprocedure

*[$rootColor] **sphinx_needs_data_explorer**
**[#lightgreen] **AI-Assisted Systems Engineering**\n\n[[ https://github.com/ollama/ollama/blob/main/README.md Ollama/ChatGPT/Gemini ]]
***[#LightSkyBlue] **Requirements Analysis**\n\nDetecting conflicts, dependencies, and ambiguities in requirements.
****[$Implemented] Requirement Checker
**** Requirement Finder
**** Requirement Conflict Finder
**** Requirement Dependency Finder
***[#LightSkyBlue] **Requirement Traceability**\n\nMapping requirements to design, implementation, and test cases for full lifecycle traceability.
***[#LightSkyBlue] **Impact Analysis**\n\nUsing AI to analyze how changes in one part of the system affect other traceability items.
***[#LightSkyBlue] **Validation and Verification Support**\n\nEnsuring that requirements align with test results and system performance.
***[#LightSkyBlue] **Compliance Checking**\n\nAutomating checks for ASPICE or ISO 26262 compliance.
***[#LightSkyBlue] **Change Management**\n\nIdentifying the ripple effects of changes in requirements or designs across the V-Cycle.
***[#LightSkyBlue] **Text Editing and Document Processing**
****[$Implemented] Spell Checker
****[$Implemented] Grammar Checker
***[#LightSkyBlue] AI-Assisted Requirement Generation
**** Requirement Generation
***** Using AI to automatically draft high-level or detailed functional and non-functional requirements based on project descriptions or templates.
**** Requirement Discovery
***** AI analyzes inputs (e.g., user interviews, system logs, or documents) to suggest or infer requirements.
**** Automated Requirement Drafting
***** AI generates structured requirement documents from unstructured text or prompts.

**[#lightgreen] **[[ https://www.sphinx-doc.org/en/master/ Sphinx ]]**
*** Sphinx Extension
****[#LightSkyBlue] Documentation
****[#LightSkyBlue] Automotive Requirement\nTraceability
****[#LightSkyBlue] Interactive Web-based\nAnalytical Tool
***** HTML
***** CSS
*****[#Yellow] JavaScript
****** [[ https://visjs.org visjs ]]
******* Dynamic and interactive\ndata network visualization
****** [[ https://github.com/peggyjs/peggy pegjs ]]
******* Powerful and flexible\nparser generator
****** [[ https://github.com/select2/select2 select2 ]]
******* Library for creating\nand managing user input
****** [[ https://github.com/jquery/jquery jQuery ]]
******* DOM manipulation library
****** [[ https://github.com/DataTables/DataTablesSrc DataTables ]]
******* HTML table enhancing library
****[#LightSkyBlue] Complement to Sphinx-Needs
**[#lightgreen] **Open Source Project**\navailable in
*** [[ https://github.com/mi-parkes/sphinx-needs-data-explorer Github ]]
*** [[ https://pypi.org/project/sphinx-needs-data-explorer PYPI ]]
**[#lightgreen] **Platforms**
*** Linux
*** Mac OS X
*** Windows +10
**[#lightgreen] **Development Tools**
***[#LightSkyBlue] Package Management
**** poetry
***[#LightSkyBlue] IDE
**** VS Code
***** DevContainer
***[#LightSkyBlue]  CI/CD
**** GitHub Actions
***** Documentation
****** Generation
****** Deployment to GitHub Pages
@endmindmap
